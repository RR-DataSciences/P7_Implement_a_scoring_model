# Workflow to access AWS resources when the workflow is linked to a branch
name: Déploiement sur EC2 AWS
on:
  push:
    branches:
      - master
env:
  AWS_REGION: eu-west-1
  GITHUB_REPO: https://github.com/RR-DataSciences/P7_Implement_a_scoring_model
# permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  MajPullOnEC2:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::010526279977:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Get EC2 Public DNS
        id: get-ec2-dns
        run: |
          DNS=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=YourInstanceTag" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].PublicDnsName" \
            --output text)
          echo "AWS_EC2=$DNS" >> $GITHUB_ENV
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ env.AWS_EC2 }} >> ~/.ssh/known_hosts
      - name: Connect & Execute commands on EC2
        run: | 
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ env.AWS_EC2 }} << EOF
          # Ajoutez ici d'autres commandes à exécuter sur l'EC2
          ls
          cd ~/P7_Implement_a_scoring_model && git pull ${{ env.GITHUB_REPO }}
          pip install -r requirements.txt
          EOF
